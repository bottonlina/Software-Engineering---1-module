{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Untitled13.ipynb",
      "provenance": [],
      "collapsed_sections": [],
      "authorship_tag": "ABX9TyM1uLJmQQSnMK1AFzkcOj4K"
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "source": [
        "### Comando de repetições - Range ()"
      ],
      "metadata": {
        "id": "pgGad4x2mzsw"
      }
    },
    {
      "cell_type": "code",
      "execution_count": 13,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 130
        },
        "id": "wHBjGmnfmy3e",
        "outputId": "ee4187e0-dfec-4efb-8786-0190da279950"
      },
      "outputs": [
        {
          "output_type": "error",
          "ename": "SyntaxError",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;36m  File \u001b[0;32m\"<ipython-input-13-a26458137ab1>\"\u001b[0;36m, line \u001b[0;32m4\u001b[0m\n\u001b[0;31m    list (range(1) 11) #Gera uma sequência de 1 à 11:\u001b[0m\n\u001b[0m                    ^\u001b[0m\n\u001b[0;31mSyntaxError\u001b[0m\u001b[0;31m:\u001b[0m invalid syntax\n"
          ]
        }
      ],
      "source": [
        "list (range(10)) #Gera uma sequência de 0 à 9.\n",
        "print(range(10))\n",
        "\n",
        "list (range(1) 11) #Gera uma sequência de 1 à 11:\n",
        "print (range(1) 11)\n",
        "\n",
        "list (range(0,30,5)) #Gera uma sequência de 0 à 30 com step = 5.\n",
        "[0, 5, 10, 15, 20, 25]\n",
        "list (range(0,-10,-1)) #Gera uma sequência numérica negativa.\n",
        "[0, -1, -2, -3, -4, -5, -6, -7, -8, -9]\n",
        "list (range(0)) #Gera uma lista vazia.\n",
        "[]"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "contagem = 0\n",
        "for contagem in range(1,10):\n",
        "         print(contagem)\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "tKOMJYzBoVgq",
        "outputId": "602feae5-4e69-49ec-9577-c1b717e3f214"
      },
      "execution_count": 7,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "1\n",
            "2\n",
            "3\n",
            "4\n",
            "5\n",
            "6\n",
            "7\n",
            "8\n",
            "9\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "count = 3\n",
        "for count in range(2,10):\n",
        "         print(count)\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "krM1U1lPoZVG",
        "outputId": "568debdd-8b67-4f8d-8f77-9de54eccfec3"
      },
      "execution_count": 10,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "2\n",
            "3\n",
            "4\n",
            "5\n",
            "6\n",
            "7\n",
            "8\n",
            "9\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "count = 8\n",
        "while(count < 10):\n",
        "   print(count)\n",
        "   count = count + 1\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "jd9pbQldp_jP",
        "outputId": "d00a5388-dbc6-4f89-93c7-37aa5f5c5107"
      },
      "execution_count": 11,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "8\n",
            "9\n"
          ]
        }
      ]
    }
  ]
}